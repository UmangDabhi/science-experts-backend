version: "3.8"
services:
  backend:
    build:
      context: ./  # Context for building the backend container
    ports:
      - "3000:3000"  # Exposing port 3000 for backend
    env_file:
      - .env  # Reference the .env file
    depends_on:
      - postgres  # Ensure the database starts before the backend
    networks:
      - app-network
    restart: always  # Restart backend in case of failures

  postgres:
    image: postgres:13  # You can use a specific version of PostgreSQL, here we use version 13
    environment:
      POSTGRES_USER: postgres  # Default PostgreSQL user
      POSTGRES_PASSWORD: examplepassword  # Default password (make sure to change it in production)
      POSTGRES_DB: ScienceExperts  # Default database name
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Persist data even if the container is stopped or removed
    ports:
      - "5432:5432"  # Expose Postgres port
    networks:
      - app-network
    restart: always  # Restart database in case of failures

  adminer:
    image: adminer  # Using the official Adminer image
    restart: always  # Restart Adminer in case of failures
    ports:
      - "8080:8080"  # Access Adminer on http://localhost:8080
    depends_on:
      - postgres  # Ensure the database starts before Adminer
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:  # Define a named volume to persist PostgreSQL data
